{
	"id": "7cf0dccca85300429d1f500d02267572",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.17",
	"solcLongVersion": "0.4.17+commit.bdeb9e52",
	"input": {
		"language": "Solidity",
		"sources": {
			"Auction.sol": {
				"content": "pragma solidity ^0.4.17;\r\n\r\ncontract Auction{\r\n    struct Item{\r\n        uint itemId;\r\n        uint[] itemTokens;\r\n    }\r\n\r\n    struct Person{\r\n        uint remainingTokens;\r\n        uint personId;\r\n        address addr;\r\n    }\r\n\r\n    mapping(address => Person) personId;\r\n    Person[4] bidders;\r\n\r\n    Item[3] public items;\r\n    address[3] public winners;\r\n    address public beneficiary;\r\n\r\n    uint bidderCount = 0;\r\n\r\n    function Auction() public payable{              //constructor\r\n        beneficiary = msg.sender;\r\n\r\n        uint[] memory emptyArray;\r\n        items[0] = Item({itemId:0,itemTokens:emptyArray});\r\n        items[1] = Item({itemId:1,itemTokens:emptyArray});\r\n        items[2] = Item({itemId:2,itemTokens:emptyArray});\r\n    } \r\n\r\n\r\n\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Auction.sol": {
				"Auction": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "beneficiary",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "winners",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "items",
							"outputs": [
								{
									"name": "itemId",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Auction.sol\":28:758  contract Auction{\r... */\n  mstore(0x40, 0x60)\n    /* \"Auction.sol\":416:417  0 */\n  0x0\n    /* \"Auction.sol\":397:417  uint bidderCount = 0 */\n  0x17\n  sstore\n    /* \"Auction.sol\":534:558  uint[] memory emptyArray */\n  tag_2\n  jump\t// in(tag_3)\ntag_2:\n    /* \"Auction.sol\":511:521  msg.sender */\n  caller\n    /* \"Auction.sol\":497:508  beneficiary */\n  0x16\n  0x0\n    /* \"Auction.sol\":497:521  beneficiary = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Auction.sol\":580:618  Item({itemId:0,itemTokens:emptyArray}) */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Auction.sol\":593:594  0 */\n  0x0\n    /* \"Auction.sol\":580:618  Item({itemId:0,itemTokens:emptyArray}) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Auction.sol\":606:616  emptyArray */\n  dup3\n    /* \"Auction.sol\":580:618  Item({itemId:0,itemTokens:emptyArray}) */\n  dup2\n  mstore\n  pop\n    /* \"Auction.sol\":569:574  items */\n  0xd\n    /* \"Auction.sol\":575:576  0 */\n  0x0\n    /* \"Auction.sol\":569:577  items[0] */\n  0x3\n  dup2\n  lt\n  iszero\n  iszero\n  tag_5\n  jumpi\n  invalid\ntag_5:\n  0x2\n  mul\n  add\n    /* \"Auction.sol\":569:618  items[0] = Item({itemId:0,itemTokens:emptyArray}) */\n  0x0\n  dup3\n  add\n  mload\n  dup2\n  0x0\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x1\n  add\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_7\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_8)\ntag_7:\n  pop\n  swap1\n  pop\n  pop\n    /* \"Auction.sol\":640:678  Item({itemId:1,itemTokens:emptyArray}) */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Auction.sol\":653:654  1 */\n  0x1\n    /* \"Auction.sol\":640:678  Item({itemId:1,itemTokens:emptyArray}) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Auction.sol\":666:676  emptyArray */\n  dup3\n    /* \"Auction.sol\":640:678  Item({itemId:1,itemTokens:emptyArray}) */\n  dup2\n  mstore\n  pop\n    /* \"Auction.sol\":629:634  items */\n  0xd\n    /* \"Auction.sol\":635:636  1 */\n  0x1\n    /* \"Auction.sol\":629:637  items[1] */\n  0x3\n  dup2\n  lt\n  iszero\n  iszero\n  tag_9\n  jumpi\n  invalid\ntag_9:\n  0x2\n  mul\n  add\n    /* \"Auction.sol\":629:678  items[1] = Item({itemId:1,itemTokens:emptyArray}) */\n  0x0\n  dup3\n  add\n  mload\n  dup2\n  0x0\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x1\n  add\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_11\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_8)\ntag_11:\n  pop\n  swap1\n  pop\n  pop\n    /* \"Auction.sol\":700:738  Item({itemId:2,itemTokens:emptyArray}) */\n  0x40\n  dup1\n  mload\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Auction.sol\":713:714  2 */\n  0x2\n    /* \"Auction.sol\":700:738  Item({itemId:2,itemTokens:emptyArray}) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Auction.sol\":726:736  emptyArray */\n  dup3\n    /* \"Auction.sol\":700:738  Item({itemId:2,itemTokens:emptyArray}) */\n  dup2\n  mstore\n  pop\n    /* \"Auction.sol\":689:694  items */\n  0xd\n    /* \"Auction.sol\":695:696  2 */\n  0x2\n    /* \"Auction.sol\":689:697  items[2] */\n  0x3\n  dup2\n  lt\n  iszero\n  iszero\n  tag_12\n  jumpi\n  invalid\ntag_12:\n  0x2\n  mul\n  add\n    /* \"Auction.sol\":689:738  items[2] = Item({itemId:2,itemTokens:emptyArray}) */\n  0x0\n  dup3\n  add\n  mload\n  dup2\n  0x0\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x1\n  add\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_14\n  swap3\n  swap2\n  swap1\n  jump\t// in(tag_8)\ntag_14:\n  pop\n  swap1\n  pop\n  pop\n    /* \"Auction.sol\":426:746  function Auction() public payable{              //constructor\r... */\n  pop\n    /* \"Auction.sol\":28:758  contract Auction{\r... */\n  jump(tag_15)\ntag_3:\n  0x20\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  0x0\n  dup2\n  mstore\n  pop\n  swap1\n  jump\t// out\ntag_8:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x0\n  mstore\n  keccak256(0x0, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_17:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_18\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x1\n  add\n  swap1\n  jump(tag_17)\ntag_18:\ntag_16:\n  pop\n  swap1\n  pop\n  tag_19\n  swap2\n  swap1\n  jump\t// in(tag_20)\ntag_19:\n  pop\n  swap1\n  jump\t// out\ntag_20:\n  tag_21\n  swap2\n  swap1\ntag_22:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_23\n  jumpi\n  0x0\n  dup2\n  0x0\n  swap1\n  sstore\n  pop\n  0x1\n  add\n  jump(tag_22)\ntag_23:\n  pop\n  swap1\n  jump\ntag_21:\n  swap1\n  jump\t// out\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Auction.sol\":28:758  contract Auction{\r... */\n      mstore(0x40, 0x60)\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x38af3eed\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xa2fb1175\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbfb231d2\n      eq\n      tag_4\n      jumpi\n      0x0\n      dup1\n      revert\n        /* \"Auction.sol\":362:388  address public beneficiary */\n    tag_2:\n      jumpi(tag_5, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_5:\n      tag_6\n      jump(tag_7)\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Auction.sol\":330:355  address[3] public winners */\n    tag_3:\n      jumpi(tag_8, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_8:\n      tag_9\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Auction.sol\":303:323  Item[3] public items */\n    tag_4:\n      jumpi(tag_11, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_11:\n      tag_12\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_13)\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Auction.sol\":362:388  address public beneficiary */\n    tag_7:\n      0x16\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Auction.sol\":330:355  address[3] public winners */\n    tag_10:\n      0x13\n      dup2\n      0x3\n      dup2\n      lt\n      iszero\n      iszero\n      tag_14\n      jumpi\n      invalid\n    tag_14:\n      add\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Auction.sol\":303:323  Item[3] public items */\n    tag_13:\n      0xd\n      dup2\n      0x3\n      dup2\n      lt\n      iszero\n      iszero\n      tag_16\n      jumpi\n      invalid\n    tag_16:\n      0x2\n      mul\n      add\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x0\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a7230582049b2aa1557edf7b38512e07ac36803d6af22a6b29a99773725b64325370d0d740029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040526000601755610011610154565b33601660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408051908101604052806000815260200182815250600d600060038110151561007857fe5b600202016000820151816000015560208201518160010190805190602001906100a2929190610168565b5090505060408051908101604052806001815260200182815250600d60016003811015156100cc57fe5b600202016000820151816000015560208201518160010190805190602001906100f6929190610168565b5090505060408051908101604052806002815260200182815250600d600260038110151561012057fe5b6002020160008201518160000155602082015181600101908051906020019061014a929190610168565b50905050506101da565b602060405190810160405280600081525090565b8280548282559060005260206000209081019282156101a4579160200282015b828111156101a3578251825591602001919060010190610188565b5b5090506101b191906101b5565b5090565b6101d791905b808211156101d35760008160009055506001016101bb565b5090565b90565b6101ec806101e96000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338af3eed14610053578063a2fb1175146100a8578063bfb231d21461010b57600080fd5b341561005e57600080fd5b610066610142565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100b357600080fd5b6100c96004808035906020019091905050610168565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561011657600080fd5b61012c600480803590602001909190505061019d565b6040518082815260200191505060405180910390f35b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60138160038110151561017757fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d816003811015156101ac57fe5b6002020160009150905080600001549050815600a165627a7a7230582049b2aa1557edf7b38512e07ac36803d6af22a6b29a99773725b64325370d0d740029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x17 SSTORE PUSH2 0x11 PUSH2 0x154 JUMP JUMPDEST CALLER PUSH1 0x16 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x78 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xA2 SWAP3 SWAP2 SWAP1 PUSH2 0x168 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x1 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0xCC JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0xF6 SWAP3 SWAP2 SWAP1 PUSH2 0x168 JUMP JUMPDEST POP SWAP1 POP POP PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0xD PUSH1 0x2 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x120 JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x14A SWAP3 SWAP2 SWAP1 PUSH2 0x168 JUMP JUMPDEST POP SWAP1 POP POP POP PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1A4 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1A3 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x188 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1B5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x1D7 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1BB JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1EC DUP1 PUSH2 0x1E9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x53 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x13 DUP2 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x177 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD DUP2 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x1AC JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x49 0xb2 0xaa ISZERO JUMPI 0xed 0xf7 0xb3 DUP6 SLT 0xe0 PUSH27 0xC36803D6AF22A6B29A99773725B64325370D0D7400290000000000 ",
							"sourceMap": "28:730:0:-;;;416:1;397:20;;534:24;;:::i;:::-;511:10;497:11;;:24;;;;;;;;;;;;;;;;;;580:38;;;;;;;;;593:1;580:38;;;;606:10;580:38;;;569:5;575:1;569:8;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;640:38;;;;;;;;;653:1;640:38;;;;666:10;640:38;;;629:5;635:1;629:8;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;700:38;;;;;;;;;713:1;700:38;;;;726:10;700:38;;;689:5;695:1;689:8;;;;;;;;;;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;426:320;28:730;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338af3eed14610053578063a2fb1175146100a8578063bfb231d21461010b57600080fd5b341561005e57600080fd5b610066610142565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100b357600080fd5b6100c96004808035906020019091905050610168565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561011657600080fd5b61012c600480803590602001909190505061019d565b6040518082815260200191505060405180910390f35b601660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60138160038110151561017757fe5b016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600d816003811015156101ac57fe5b6002020160009150905080600001549050815600a165627a7a7230582049b2aa1557edf7b38512e07ac36803d6af22a6b29a99773725b64325370d0d740029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x38AF3EED EQ PUSH2 0x53 JUMPI DUP1 PUSH4 0xA2FB1175 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x5E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0xB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC9 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x168 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x116 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12C PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x16 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x13 DUP2 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x177 JUMPI INVALID JUMPDEST ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xD DUP2 PUSH1 0x3 DUP2 LT ISZERO ISZERO PUSH2 0x1AC JUMPI INVALID JUMPDEST PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0x49 0xb2 0xaa ISZERO JUMPI 0xed 0xf7 0xb3 DUP6 SLT 0xe0 PUSH27 0xC36803D6AF22A6B29A99773725B64325370D0D7400290000000000 ",
							"sourceMap": "28:730:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;362:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;330:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;303:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;362:26;;;;;;;;;;;;;:::o;330:25::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;303:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "98400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"beneficiary()": "413",
								"items(uint256)": "513",
								"winners(uint256)": "506"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "MSTORE"
								},
								{
									"begin": 416,
									"end": 417,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 397,
									"end": 417,
									"name": "PUSH",
									"value": "17"
								},
								{
									"begin": 397,
									"end": 417,
									"name": "SSTORE"
								},
								{
									"begin": 534,
									"end": 558,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 534,
									"end": 558,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 534,
									"end": 558,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 534,
									"end": 558,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 534,
									"end": 558,
									"name": "JUMPDEST"
								},
								{
									"begin": 511,
									"end": 521,
									"name": "CALLER"
								},
								{
									"begin": 497,
									"end": 508,
									"name": "PUSH",
									"value": "16"
								},
								{
									"begin": 497,
									"end": 508,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "EXP"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "DUP2"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "SLOAD"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "DUP2"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "MUL"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "NOT"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "AND"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "SWAP1"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "DUP4"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "AND"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "MUL"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "OR"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "SWAP1"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "SSTORE"
								},
								{
									"begin": 497,
									"end": 521,
									"name": "POP"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "DUP1"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "MLOAD"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "SWAP1"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "DUP2"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "ADD"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "MSTORE"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "DUP1"
								},
								{
									"begin": 593,
									"end": 594,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "DUP2"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "MSTORE"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "ADD"
								},
								{
									"begin": 606,
									"end": 616,
									"name": "DUP3"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "DUP2"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "MSTORE"
								},
								{
									"begin": 580,
									"end": 618,
									"name": "POP"
								},
								{
									"begin": 569,
									"end": 574,
									"name": "PUSH",
									"value": "D"
								},
								{
									"begin": 575,
									"end": 576,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "DUP2"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "LT"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "ISZERO"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "ISZERO"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "JUMPI"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "INVALID"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "JUMPDEST"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "MUL"
								},
								{
									"begin": 569,
									"end": 577,
									"name": "ADD"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "DUP3"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "ADD"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "MLOAD"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "DUP2"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "ADD"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "SSTORE"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "DUP3"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "ADD"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "MLOAD"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "DUP2"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "ADD"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "SWAP1"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "DUP1"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "MLOAD"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "SWAP1"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "ADD"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "SWAP1"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "SWAP3"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "SWAP2"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "SWAP1"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "JUMPDEST"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "POP"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "SWAP1"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "POP"
								},
								{
									"begin": 569,
									"end": 618,
									"name": "POP"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "DUP1"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "MLOAD"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "SWAP1"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "DUP2"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "ADD"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "MSTORE"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "DUP1"
								},
								{
									"begin": 653,
									"end": 654,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "DUP2"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "MSTORE"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "ADD"
								},
								{
									"begin": 666,
									"end": 676,
									"name": "DUP3"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "DUP2"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "MSTORE"
								},
								{
									"begin": 640,
									"end": 678,
									"name": "POP"
								},
								{
									"begin": 629,
									"end": 634,
									"name": "PUSH",
									"value": "D"
								},
								{
									"begin": 635,
									"end": 636,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "DUP2"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "LT"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "ISZERO"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "ISZERO"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "JUMPI"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "INVALID"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "JUMPDEST"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "MUL"
								},
								{
									"begin": 629,
									"end": 637,
									"name": "ADD"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "DUP3"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "ADD"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "MLOAD"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "DUP2"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "ADD"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "SSTORE"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "DUP3"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "ADD"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "MLOAD"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "DUP2"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "ADD"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "SWAP1"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "DUP1"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "MLOAD"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "SWAP1"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "ADD"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "SWAP1"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "SWAP3"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "SWAP2"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "SWAP1"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "JUMPDEST"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "POP"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "SWAP1"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "POP"
								},
								{
									"begin": 629,
									"end": 678,
									"name": "POP"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "DUP1"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "MLOAD"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "SWAP1"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "DUP2"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "ADD"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "MSTORE"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "DUP1"
								},
								{
									"begin": 713,
									"end": 714,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "DUP2"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "MSTORE"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "ADD"
								},
								{
									"begin": 726,
									"end": 736,
									"name": "DUP3"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "DUP2"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "MSTORE"
								},
								{
									"begin": 700,
									"end": 738,
									"name": "POP"
								},
								{
									"begin": 689,
									"end": 694,
									"name": "PUSH",
									"value": "D"
								},
								{
									"begin": 695,
									"end": 696,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "DUP2"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "LT"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "ISZERO"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "ISZERO"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "JUMPI"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "INVALID"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "JUMPDEST"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "MUL"
								},
								{
									"begin": 689,
									"end": 697,
									"name": "ADD"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "DUP3"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "ADD"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "MLOAD"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "DUP2"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "ADD"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "SSTORE"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "DUP3"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "ADD"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "MLOAD"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "DUP2"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "ADD"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "SWAP1"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "DUP1"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "MLOAD"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "SWAP1"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "ADD"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "SWAP1"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "SWAP3"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "SWAP2"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "SWAP1"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "JUMPDEST"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "POP"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "SWAP1"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "POP"
								},
								{
									"begin": 689,
									"end": 738,
									"name": "POP"
								},
								{
									"begin": 426,
									"end": 746,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "MLOAD"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "ADD"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "MSTORE"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "MSTORE"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SLOAD"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SSTORE"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "MSTORE"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "KECCAK256"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "ADD"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "ISZERO"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH [tag]",
									"value": "16"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPI"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP2"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "MUL"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "ADD"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "17"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "GT"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "ISZERO"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH [tag]",
									"value": "18"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPI"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "MLOAD"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SSTORE"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP2"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "ADD"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP2"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "ADD"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH [tag]",
									"value": "17"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "18"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "16"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH [tag]",
									"value": "19"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP2"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH [tag]",
									"value": "20"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "19"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "20"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH [tag]",
									"value": "21"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP2"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "22"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP3"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "GT"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "ISZERO"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH [tag]",
									"value": "23"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPI"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP2"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SSTORE"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "ADD"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH [tag]",
									"value": "22"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "23"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMP"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "21"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "SWAP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "CODECOPY"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 758,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a7230582049b2aa1557edf7b38512e07ac36803d6af22a6b29a99773725b64325370d0d740029",
									".code": [
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "SWAP1"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "DIV"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "AND"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH",
											"value": "38AF3EED"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH",
											"value": "A2FB1175"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH",
											"value": "BFB231D2"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 758,
											"name": "REVERT"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "CALLVALUE"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "ISZERO"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "JUMPI"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "REVERT"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "JUMP"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "DUP3"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "AND"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "AND"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "MSTORE"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "ADD"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "POP"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "MLOAD"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "DUP1"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "SWAP2"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "SUB"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "RETURN"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "CALLVALUE"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "ISZERO"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMPI"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "REVERT"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "ADD"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMP"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "MLOAD"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP3"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "AND"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "AND"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "MSTORE"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "ADD"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "MLOAD"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SUB"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "RETURN"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "CALLVALUE"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "ISZERO"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMPI"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "REVERT"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "ADD"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMP"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "MLOAD"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP3"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "MSTORE"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "ADD"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "MLOAD"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SUB"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "RETURN"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "JUMPDEST"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH",
											"value": "16"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "SLOAD"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "EXP"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "SWAP1"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "DIV"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "AND"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "DUP2"
										},
										{
											"begin": 362,
											"end": 388,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "13"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "LT"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "ISZERO"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "ISZERO"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMPI"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "INVALID"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMPDEST"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "ADD"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP2"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "POP"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SLOAD"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "EXP"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "SWAP1"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DIV"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "AND"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "DUP2"
										},
										{
											"begin": 330,
											"end": 355,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "LT"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "ISZERO"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "ISZERO"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMPI"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "INVALID"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "MUL"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "ADD"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "ADD"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SLOAD"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 323,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"beneficiary()": "38af3eed",
							"items(uint256)": "bfb231d2",
							"winners(uint256)": "a2fb1175"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.17+commit.bdeb9e52\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"beneficiary\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"name\":\"itemId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Auction.sol\":\"Auction\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Auction.sol\":{\"keccak256\":\"0x475bbd93de526c7d42b41d0a967ec29b1f06a32e2556469aa092b1acbc9eda37\",\"urls\":[\"bzzr://46c62ed38d77796c21aab317a34452f40ebc0a00f931f0b5437ed35e468aa55f\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Auction.sol": {
				"ast": {
					"absolutePath": "Auction.sol",
					"exportedSymbols": {
						"Auction": [
							77
						]
					},
					"id": 78,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "Auction",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Auction.Item",
									"id": 7,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "itemId",
											"nodeType": "VariableDeclaration",
											"scope": 7,
											"src": "73:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "73:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 6,
											"name": "itemTokens",
											"nodeType": "VariableDeclaration",
											"scope": 7,
											"src": "95:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[] storage pointer"
											},
											"typeName": {
												"baseType": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "95:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 5,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "95:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[] storage pointer"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nodeType": "StructDefinition",
									"scope": 77,
									"src": "51:69:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Auction.Person",
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 9,
											"name": "remainingTokens",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "152:20:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 8,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "152:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"name": "personId",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "183:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 10,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "183:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 13,
											"name": "addr",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "207:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "207:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Person",
									"nodeType": "StructDefinition",
									"scope": 77,
									"src": "128:99:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"name": "personId",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "235:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$14_storage_$",
										"typeString": "mapping(address => struct Auction.Person storage ref)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 15,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "243:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "235:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Person_$14_storage_$",
											"typeString": "mapping(address => struct Auction.Person storage ref)"
										},
										"valueType": {
											"contractScope": null,
											"id": 16,
											"name": "Person",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 14,
											"src": "254:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Person_$14_storage_ptr",
												"typeString": "struct Auction.Person storage pointer"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"name": "bidders",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "277:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Person_$14_storage_$4_storage",
										"typeString": "struct Auction.Person storage ref[4] storage ref"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 19,
											"name": "Person",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 14,
											"src": "277:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Person_$14_storage_ptr",
												"typeString": "struct Auction.Person storage pointer"
											}
										},
										"id": 21,
										"length": {
											"argumentTypes": null,
											"hexValue": "34",
											"id": 20,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "284:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_4_by_1",
												"typeString": "int_const 4"
											},
											"value": "4"
										},
										"nodeType": "ArrayTypeName",
										"src": "277:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Person_$14_storage_$4_storage_ptr",
											"typeString": "struct Auction.Person storage ref[4] storage pointer"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "items",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "303:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Item_$7_storage_$3_storage",
										"typeString": "struct Auction.Item storage ref[3] storage ref"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 23,
											"name": "Item",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 7,
											"src": "303:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$7_storage_ptr",
												"typeString": "struct Auction.Item storage pointer"
											}
										},
										"id": 25,
										"length": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 24,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "308:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "303:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Item_$7_storage_$3_storage_ptr",
											"typeString": "struct Auction.Item storage ref[3] storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 30,
									"name": "winners",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "330:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$3_storage",
										"typeString": "address[3] storage ref"
									},
									"typeName": {
										"baseType": {
											"id": 27,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "330:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 29,
										"length": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 28,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "338:1:0",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "330:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$3_storage_ptr",
											"typeString": "address[3] storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 32,
									"name": "beneficiary",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "362:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 31,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "362:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 35,
									"name": "bidderCount",
									"nodeType": "VariableDeclaration",
									"scope": 77,
									"src": "397:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 33,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "397:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 34,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "416:1:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "459:287:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 38,
														"name": "beneficiary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "497:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 39,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "511:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "511:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "497:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "497:24:0"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"name": "emptyArray",
														"nodeType": "VariableDeclaration",
														"scope": 76,
														"src": "534:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														},
														"typeName": {
															"baseType": {
																"id": 44,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "534:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 45,
															"length": null,
															"nodeType": "ArrayTypeName",
															"src": "534:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[] storage pointer"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 47,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "534:6:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 48,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "569:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$7_storage_$3_storage",
																"typeString": "struct Auction.Item storage ref[3] storage ref"
															}
														},
														"id": 50,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "575:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "569:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$7_storage",
															"typeString": "struct Auction.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "593:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"argumentTypes": null,
																"id": 53,
																"name": "emptyArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "606:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 51,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "580:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$7_storage_ptr_$",
																"typeString": "type(struct Auction.Item storage pointer)"
															}
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"itemId",
															"itemTokens"
														],
														"nodeType": "FunctionCall",
														"src": "580:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$7_memory",
															"typeString": "struct Auction.Item memory"
														}
													},
													"src": "569:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$7_storage",
														"typeString": "struct Auction.Item storage ref"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "569:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 57,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "629:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$7_storage_$3_storage",
																"typeString": "struct Auction.Item storage ref[3] storage ref"
															}
														},
														"id": 59,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "635:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "629:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$7_storage",
															"typeString": "struct Auction.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31",
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "653:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															{
																"argumentTypes": null,
																"id": 62,
																"name": "emptyArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "666:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 60,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "640:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$7_storage_ptr_$",
																"typeString": "type(struct Auction.Item storage pointer)"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"itemId",
															"itemTokens"
														],
														"nodeType": "FunctionCall",
														"src": "640:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$7_memory",
															"typeString": "struct Auction.Item memory"
														}
													},
													"src": "629:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$7_storage",
														"typeString": "struct Auction.Item storage ref"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "629:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 66,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "689:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Item_$7_storage_$3_storage",
																"typeString": "struct Auction.Item storage ref[3] storage ref"
															}
														},
														"id": 68,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "695:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "689:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$7_storage",
															"typeString": "struct Auction.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "32",
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "713:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															{
																"argumentTypes": null,
																"id": 71,
																"name": "emptyArray",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 46,
																"src": "726:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 69,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "700:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$7_storage_ptr_$",
																"typeString": "type(struct Auction.Item storage pointer)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"itemId",
															"itemTokens"
														],
														"nodeType": "FunctionCall",
														"src": "700:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$7_memory",
															"typeString": "struct Auction.Item memory"
														}
													},
													"src": "689:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$7_storage",
														"typeString": "struct Auction.Item storage ref"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "689:49:0"
											}
										]
									},
									"id": 76,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Auction",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "459:0:0"
									},
									"scope": 77,
									"src": "426:320:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 78,
							"src": "28:730:0"
						}
					],
					"src": "0:758:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "Auction.sol",
						"exportedSymbols": {
							"Auction": [
								77
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"^",
									"0.4",
									".17"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									77
								],
								"name": "Auction",
								"scope": 78
							},
							"children": [
								{
									"attributes": {
										"canonicalName": "Auction.Item",
										"name": "Item",
										"scope": 77,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"constant": false,
												"name": "itemId",
												"scope": 7,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint256",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 2,
													"name": "ElementaryTypeName",
													"src": "73:4:0"
												}
											],
											"id": 3,
											"name": "VariableDeclaration",
											"src": "73:11:0"
										},
										{
											"attributes": {
												"constant": false,
												"name": "itemTokens",
												"scope": 7,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint256[] storage pointer",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"length": null,
														"type": "uint256[] storage pointer"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 4,
															"name": "ElementaryTypeName",
															"src": "95:4:0"
														}
													],
													"id": 5,
													"name": "ArrayTypeName",
													"src": "95:6:0"
												}
											],
											"id": 6,
											"name": "VariableDeclaration",
											"src": "95:17:0"
										}
									],
									"id": 7,
									"name": "StructDefinition",
									"src": "51:69:0"
								},
								{
									"attributes": {
										"canonicalName": "Auction.Person",
										"name": "Person",
										"scope": 77,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"constant": false,
												"name": "remainingTokens",
												"scope": 14,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint256",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 8,
													"name": "ElementaryTypeName",
													"src": "152:4:0"
												}
											],
											"id": 9,
											"name": "VariableDeclaration",
											"src": "152:20:0"
										},
										{
											"attributes": {
												"constant": false,
												"name": "personId",
												"scope": 14,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "uint256",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "uint",
														"type": "uint256"
													},
													"id": 10,
													"name": "ElementaryTypeName",
													"src": "183:4:0"
												}
											],
											"id": 11,
											"name": "VariableDeclaration",
											"src": "183:13:0"
										},
										{
											"attributes": {
												"constant": false,
												"name": "addr",
												"scope": 14,
												"stateVariable": false,
												"storageLocation": "default",
												"type": "address",
												"value": null,
												"visibility": "internal"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 12,
													"name": "ElementaryTypeName",
													"src": "207:7:0"
												}
											],
											"id": 13,
											"name": "VariableDeclaration",
											"src": "207:12:0"
										}
									],
									"id": 14,
									"name": "StructDefinition",
									"src": "128:99:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "personId",
										"scope": 77,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "mapping(address => struct Auction.Person storage ref)",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"type": "mapping(address => struct Auction.Person storage ref)"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 15,
													"name": "ElementaryTypeName",
													"src": "243:7:0"
												},
												{
													"attributes": {
														"contractScope": null,
														"name": "Person",
														"referencedDeclaration": 14,
														"type": "struct Auction.Person storage pointer"
													},
													"id": 16,
													"name": "UserDefinedTypeName",
													"src": "254:6:0"
												}
											],
											"id": 17,
											"name": "Mapping",
											"src": "235:26:0"
										}
									],
									"id": 18,
									"name": "VariableDeclaration",
									"src": "235:35:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "bidders",
										"scope": 77,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "struct Auction.Person storage ref[4] storage ref",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"type": "struct Auction.Person storage ref[4] storage pointer"
											},
											"children": [
												{
													"attributes": {
														"contractScope": null,
														"name": "Person",
														"referencedDeclaration": 14,
														"type": "struct Auction.Person storage pointer"
													},
													"id": 19,
													"name": "UserDefinedTypeName",
													"src": "277:6:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"hexvalue": "34",
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"subdenomination": null,
														"token": "number",
														"type": "int_const 4",
														"value": "4"
													},
													"id": 20,
													"name": "Literal",
													"src": "284:1:0"
												}
											],
											"id": 21,
											"name": "ArrayTypeName",
											"src": "277:9:0"
										}
									],
									"id": 22,
									"name": "VariableDeclaration",
									"src": "277:17:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "items",
										"scope": 77,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "struct Auction.Item storage ref[3] storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "struct Auction.Item storage ref[3] storage pointer"
											},
											"children": [
												{
													"attributes": {
														"contractScope": null,
														"name": "Item",
														"referencedDeclaration": 7,
														"type": "struct Auction.Item storage pointer"
													},
													"id": 23,
													"name": "UserDefinedTypeName",
													"src": "303:4:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"hexvalue": "33",
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"subdenomination": null,
														"token": "number",
														"type": "int_const 3",
														"value": "3"
													},
													"id": 24,
													"name": "Literal",
													"src": "308:1:0"
												}
											],
											"id": 25,
											"name": "ArrayTypeName",
											"src": "303:7:0"
										}
									],
									"id": 26,
									"name": "VariableDeclaration",
									"src": "303:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "winners",
										"scope": 77,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address[3] storage ref",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"type": "address[3] storage pointer"
											},
											"children": [
												{
													"attributes": {
														"name": "address",
														"type": "address"
													},
													"id": 27,
													"name": "ElementaryTypeName",
													"src": "330:7:0"
												},
												{
													"attributes": {
														"argumentTypes": null,
														"hexvalue": "33",
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"subdenomination": null,
														"token": "number",
														"type": "int_const 3",
														"value": "3"
													},
													"id": 28,
													"name": "Literal",
													"src": "338:1:0"
												}
											],
											"id": 29,
											"name": "ArrayTypeName",
											"src": "330:10:0"
										}
									],
									"id": 30,
									"name": "VariableDeclaration",
									"src": "330:25:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "beneficiary",
										"scope": 77,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "address",
										"value": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"name": "address",
												"type": "address"
											},
											"id": 31,
											"name": "ElementaryTypeName",
											"src": "362:7:0"
										}
									],
									"id": 32,
									"name": "VariableDeclaration",
									"src": "362:26:0"
								},
								{
									"attributes": {
										"constant": false,
										"name": "bidderCount",
										"scope": 77,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 33,
											"name": "ElementaryTypeName",
											"src": "397:4:0"
										},
										{
											"attributes": {
												"argumentTypes": null,
												"hexvalue": "30",
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"lValueRequested": false,
												"subdenomination": null,
												"token": "number",
												"type": "int_const 0",
												"value": "0"
											},
											"id": 34,
											"name": "Literal",
											"src": "416:1:0"
										}
									],
									"id": 35,
									"name": "VariableDeclaration",
									"src": "397:20:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": true,
										"modifiers": [
											null
										],
										"name": "Auction",
										"payable": true,
										"scope": 77,
										"stateMutability": "payable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 36,
											"name": "ParameterList",
											"src": "442:2:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 37,
											"name": "ParameterList",
											"src": "459:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "address"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 32,
																		"type": "address",
																		"value": "beneficiary"
																	},
																	"id": 38,
																	"name": "Identifier",
																	"src": "497:11:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"member_name": "sender",
																		"referencedDeclaration": null,
																		"type": "address"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 80,
																				"type": "msg",
																				"value": "msg"
																			},
																			"id": 39,
																			"name": "Identifier",
																			"src": "511:3:0"
																		}
																	],
																	"id": 40,
																	"name": "MemberAccess",
																	"src": "511:10:0"
																}
															],
															"id": 41,
															"name": "Assignment",
															"src": "497:24:0"
														}
													],
													"id": 42,
													"name": "ExpressionStatement",
													"src": "497:24:0"
												},
												{
													"attributes": {
														"assignments": [
															null
														],
														"initialValue": null
													},
													"children": [
														{
															"attributes": {
																"constant": false,
																"name": "emptyArray",
																"scope": 76,
																"stateVariable": false,
																"storageLocation": "memory",
																"type": "uint256[] memory",
																"value": null,
																"visibility": "internal"
															},
															"children": [
																{
																	"attributes": {
																		"length": null,
																		"type": "uint256[] storage pointer"
																	},
																	"children": [
																		{
																			"attributes": {
																				"name": "uint",
																				"type": "uint256"
																			},
																			"id": 44,
																			"name": "ElementaryTypeName",
																			"src": "534:4:0"
																		}
																	],
																	"id": 45,
																	"name": "ArrayTypeName",
																	"src": "534:6:0"
																}
															],
															"id": 46,
															"name": "VariableDeclaration",
															"src": "534:24:0"
														}
													],
													"id": 47,
													"name": "VariableDeclarationStatement",
													"src": "534:6:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "struct Auction.Item storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "struct Auction.Item storage ref"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 26,
																				"type": "struct Auction.Item storage ref[3] storage ref",
																				"value": "items"
																			},
																			"id": 48,
																			"name": "Identifier",
																			"src": "569:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 49,
																			"name": "Literal",
																			"src": "575:1:0"
																		}
																	],
																	"id": 50,
																	"name": "IndexAccess",
																	"src": "569:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": true,
																		"lValueRequested": false,
																		"names": [
																			"itemId",
																			"itemTokens"
																		],
																		"type": "struct Auction.Item memory",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 7,
																				"type": "type(struct Auction.Item storage pointer)",
																				"value": "Item"
																			},
																			"id": 51,
																			"name": "Identifier",
																			"src": "580:4:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "30",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 0",
																				"value": "0"
																			},
																			"id": 52,
																			"name": "Literal",
																			"src": "593:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 46,
																				"type": "uint256[] memory",
																				"value": "emptyArray"
																			},
																			"id": 53,
																			"name": "Identifier",
																			"src": "606:10:0"
																		}
																	],
																	"id": 54,
																	"name": "FunctionCall",
																	"src": "580:38:0"
																}
															],
															"id": 55,
															"name": "Assignment",
															"src": "569:49:0"
														}
													],
													"id": 56,
													"name": "ExpressionStatement",
													"src": "569:49:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "struct Auction.Item storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "struct Auction.Item storage ref"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 26,
																				"type": "struct Auction.Item storage ref[3] storage ref",
																				"value": "items"
																			},
																			"id": 57,
																			"name": "Identifier",
																			"src": "629:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "31",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 1",
																				"value": "1"
																			},
																			"id": 58,
																			"name": "Literal",
																			"src": "635:1:0"
																		}
																	],
																	"id": 59,
																	"name": "IndexAccess",
																	"src": "629:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": true,
																		"lValueRequested": false,
																		"names": [
																			"itemId",
																			"itemTokens"
																		],
																		"type": "struct Auction.Item memory",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 7,
																				"type": "type(struct Auction.Item storage pointer)",
																				"value": "Item"
																			},
																			"id": 60,
																			"name": "Identifier",
																			"src": "640:4:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "31",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 1",
																				"value": "1"
																			},
																			"id": 61,
																			"name": "Literal",
																			"src": "653:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 46,
																				"type": "uint256[] memory",
																				"value": "emptyArray"
																			},
																			"id": 62,
																			"name": "Identifier",
																			"src": "666:10:0"
																		}
																	],
																	"id": 63,
																	"name": "FunctionCall",
																	"src": "640:38:0"
																}
															],
															"id": 64,
															"name": "Assignment",
															"src": "629:49:0"
														}
													],
													"id": 65,
													"name": "ExpressionStatement",
													"src": "629:49:0"
												},
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "struct Auction.Item storage ref"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"type": "struct Auction.Item storage ref"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 26,
																				"type": "struct Auction.Item storage ref[3] storage ref",
																				"value": "items"
																			},
																			"id": 66,
																			"name": "Identifier",
																			"src": "689:5:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "32",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 2",
																				"value": "2"
																			},
																			"id": 67,
																			"name": "Literal",
																			"src": "695:1:0"
																		}
																	],
																	"id": 68,
																	"name": "IndexAccess",
																	"src": "689:8:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"isStructConstructorCall": true,
																		"lValueRequested": false,
																		"names": [
																			"itemId",
																			"itemTokens"
																		],
																		"type": "struct Auction.Item memory",
																		"type_conversion": false
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 7,
																				"type": "type(struct Auction.Item storage pointer)",
																				"value": "Item"
																			},
																			"id": 69,
																			"name": "Identifier",
																			"src": "700:4:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"hexvalue": "32",
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"subdenomination": null,
																				"token": "number",
																				"type": "int_const 2",
																				"value": "2"
																			},
																			"id": 70,
																			"name": "Literal",
																			"src": "713:1:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 46,
																				"type": "uint256[] memory",
																				"value": "emptyArray"
																			},
																			"id": 71,
																			"name": "Identifier",
																			"src": "726:10:0"
																		}
																	],
																	"id": 72,
																	"name": "FunctionCall",
																	"src": "700:38:0"
																}
															],
															"id": 73,
															"name": "Assignment",
															"src": "689:49:0"
														}
													],
													"id": 74,
													"name": "ExpressionStatement",
													"src": "689:49:0"
												}
											],
											"id": 75,
											"name": "Block",
											"src": "459:287:0"
										}
									],
									"id": 76,
									"name": "FunctionDefinition",
									"src": "426:320:0"
								}
							],
							"id": 77,
							"name": "ContractDefinition",
							"src": "28:730:0"
						}
					],
					"id": 78,
					"name": "SourceUnit",
					"src": "0:758:0"
				}
			}
		}
	}
}